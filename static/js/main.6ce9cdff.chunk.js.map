{"version":3,"sources":["components/SelectorsList/SelectorsList.js","components/countedNumbersResult/countedNumbersResult.js","components/countedHashStrings/countedHashStrings.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["SelectorsList","props","numbers","strings","booleans","objects","className","length","map","number","value","string","object","key","bool","toString","CountedNumbersResult","useState","proizv","setProizv","useEffect","selectedNumbers","proizvTemp","BigInt","k","CountedHashStrings","stringToHash","setStringToHash","hashOfString","setHashOfString","selectedStrings","newString","i","sha256","customStyles","content","top","left","right","bottom","marginRight","display","flexDirection","alignItems","transform","p","paddingBottom","App","modalErr","setModal","savedState","setSavedState","count","setCount","reseted","setReseted","setSelectedStrings","setSelectedNumbers","selectedObjects","setSelectedObjects","selectedBooleans","setSelectedBooleans","fetch","then","res","json","checkArr","testArr","catch","err","console","log","setModalErr","param","Array","isArray","sortElemFunc","a","hasOwnProperty","name","t","label","tempObj","tempArr","undoRedo","e","preventDefault","target","setFilter","isOpen","onRequestClose","parentSelector","document","querySelector","style","contentLabel","onClick","options","hasSelectAll","disableSearch","onChange","array","labelledBy","disabled","resetFilters","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ce9cdff.chunk.js","sourcesContent":["import './selectorsList.scss';\r\n\r\nconst SelectorsList = (props) => {\r\n  const numbers = props.numbers,\r\n    strings = props.strings,\r\n    booleans = props.booleans,\r\n    objects = props.objects;\r\n\r\n  return (\r\n    <div className=\"selector-list\">\r\n      <div className=\"section-header\">Выбранные значения: </div>\r\n      {numbers.length ?\r\n        <div className=\"selected\">\r\n          <p className=\"selected-header\">Числа: </p>\r\n          {numbers.map(number => {\r\n            return (\r\n              <div key={number.value}>{number.value}</div>\r\n            )\r\n          })}\r\n        </div> : <div className='no-selected'>Пока нет выбранных чисел.</div>}\r\n      {strings.length ?\r\n        <div className=\"selected\">\r\n          <p className=\"selected-header\">Строки: </p>\r\n          {strings.map(string => {\r\n            return (\r\n              <div key={string.value}>{string.value}</div>\r\n            )\r\n          })}\r\n        </div> : <div className='no-selected'>Пока нет выбранных строк.</div>}\r\n      {objects.length ?\r\n        <div className=\"selected\">\r\n          <p className=\"selected-header\">Объекты: </p>\r\n          {objects.map(object => {\r\n            return (\r\n              <div key={object.key}>{object.value}</div>\r\n            )\r\n          })}\r\n        </div> : <div className='no-selected'>Пока нет выбранных объектов.</div>}\r\n      {booleans.length ?\r\n        <div className=\"selected\">\r\n          <p className=\"selected-header\">Логические значения: </p>\r\n          {booleans.map(bool => {\r\n            return (\r\n              <div key={bool.value.toString()}>\r\n                {bool.value === true ? 'true' : 'false'}\r\n              </div>\r\n            )\r\n          })}\r\n        </div> : <div className='no-selected'>Пока нет выбранных логических значений.</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectorsList;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport './countedNumbersResult.scss';\r\n\r\nconst CountedNumbersResult = (props) => {\r\n  const [proizv, setProizv] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (props.selectedNumbers && props.selectedNumbers.length) {\r\n      // eslint-disable-next-line no-undef\r\n      let proizvTemp = BigInt(1);\r\n      for (let k = 0; k < props.selectedNumbers.length; k++) {\r\n        // eslint-disable-next-line no-undef\r\n        proizvTemp *= BigInt(props.selectedNumbers[k].value);\r\n      }\r\n      setProizv(proizvTemp.toString());\r\n    } else {\r\n      setProizv(null);\r\n    }\r\n  }, [props.selectedNumbers]);\r\n\r\n  return (\r\n    <div className=\"result-number\">\r\n      <div className=\"section-header\">\r\n        Произведение чисел:\r\n      </div>\r\n      <div className=\"result or not\">\r\n        {proizv ? proizv : 'пока нет результата.'}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountedNumbersResult;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { sha256 } from 'js-sha256';\r\n\r\nimport './countedHashStrings.scss';\r\n\r\nconst CountedHashStrings = (props) => {\r\n  const [stringToHash, setStringToHash] = useState(null);\r\n  const [hashOfString, setHashOfString] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (props.selectedStrings && props.selectedStrings.length) {\r\n      let newString = '';\r\n      for (let i = 0; i < props.selectedStrings.length; i++) {\r\n        newString += props.selectedStrings[i].value;\r\n      }\r\n      setStringToHash(newString);\r\n      setHashOfString(sha256(newString));\r\n    } else {\r\n      setStringToHash(null);\r\n      setHashOfString(null);\r\n    }\r\n  }, [props.selectedStrings, props.selectedStrings.length]);\r\n\r\n  return (\r\n    <div className=\"result-string\">\r\n      <div className=\"section-header\">\r\n        Хэш строки:\r\n      </div>\r\n      <div className=\"hash\">\r\n        {stringToHash}\r\n      </div>\r\n      <div className=\"hash-result\">\r\n        {stringToHash ? hashOfString : 'пока нет результата.'}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountedHashStrings;\r\n","import { useState, useEffect } from 'react';\n\nimport MultiSelect from 'react-multi-select-component';\nimport Modal from 'react-modal';\n\nimport SelectorsList from '../SelectorsList/SelectorsList.js';\nimport CountedNumbersResult from '../countedNumbersResult/countedNumbersResult.js';\nimport CountedHashStrings from '../countedHashStrings/countedHashStrings.js';\n\nimport './App.scss';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    transform: 'translate(-50%, -50%)',\n  },\n  p: {\n    paddingBottom: '10px'\n  }\n};\n\nconst App = () => {\n  let [modalErr, setModal] = useState(false),\n    [strings, setStrings] = useState([]),\n    [numbers, setNumbers] = useState([]),\n    [objects, setObjects] = useState([]),\n    [booleans, setBooleans] = useState([]),\n    [savedState, setSavedState] = useState([]),\n    [count, setCount] = useState(+0),\n    [reseted, setReseted] = useState(false);\n\n  const [selectedStrings, setSelectedStrings] = useState([]),\n    [selectedNumbers, setSelectedNumbers] = useState([]),\n    [selectedObjects, setSelectedObjects] = useState([]),\n    [selectedBooleans, setSelectedBooleans] = useState([]);\n\n  //получение данных с сервера\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/WilliamRu/TestAPI/master/db.json')\n      .then(res => res.json())\n      .then(res => checkArr(res.testArr))\n      .catch(err => {\n        setModal(true);\n        console.log('Произошла ошибка.', err);\n      });\n  }, []);\n\n  const setModalErr = () => {\n    setModal(false);\n  }\n\n  //распределение по типам данных\n  const checkArr = (param) => {\n    if (!Array.isArray(param)) return;\n\n    for (let k = 0; k < param.length; k++) {\n      if (\n        param[k] === null\n        || param[k].length === 0\n      ) console.log('Пустой объект');\n\n      if (typeof param[k] === 'boolean') sortElemFunc(param[k], booleans);\n\n      if (typeof param[k] === 'number') {\n        // eslint-disable-next-line no-undef\n        const a = BigInt(param[k]).toString();\n        sortElemFunc(a, numbers);\n      };\n\n      if (typeof param[k] === 'string') sortElemFunc(param[k], strings);\n\n      if (\n        param[k] !== null\n        && param[k].hasOwnProperty('value')\n      ) sortElemFunc(param[k], objects);\n\n      if (Array.isArray(param[k])) checkArr(param[k]);\n    }\n  }\n\n  //создание нового элемента в массивах при сортировке по типам данных\n  const sortElemFunc = (param, name) => {\n    //проверяем на повтор значений\n    if (name.length) {\n      for (let t = 0; t < name.length; t++) {\n        if (name[t].label === param) return;\n      }\n    }\n\n    //создаём временный объект\n    const tempObj = {\n      label: param.key ? param.key.toString() : param.toString(),\n      value: param.value ? param.value : param\n    };\n\n    //записываем объект в массив\n    if (!name.length) {\n      name[0] = { ...tempObj };\n    } else {\n      name[name.length] = { ...tempObj };\n    }\n  }\n\n  //следим за обновлениями данных в селектах\n  useEffect(() => {\n    if (\n      !selectedStrings.length\n      && !selectedNumbers.length\n      && !selectedBooleans.length\n      && !selectedObjects.length\n    ) return;\n\n    if (reseted) return;\n\n    if (savedState.length === 10) {\n      let tempArr = [];\n      for (let i = 1; i < savedState.length; i++) {\n        tempArr = [...tempArr, savedState[i]];\n      }\n      setSavedState([\n        ...tempArr,\n        {\n          strings: selectedStrings,\n          numbers: selectedNumbers,\n          objects: selectedObjects,\n          booleans: selectedBooleans\n        }]);\n    } else {\n      setSavedState([\n        ...savedState,\n        {\n          strings: selectedStrings,\n          numbers: selectedNumbers,\n          objects: selectedObjects,\n          booleans: selectedBooleans\n        }]);\n    }\n  }, [\n    selectedStrings,\n    selectedNumbers,\n    selectedObjects,\n    selectedBooleans\n  ]);\n\n  //кнопка отменить/повторить\n  const undoRedo = (e) => {\n    e.preventDefault(e);\n    setReseted(true);\n    e.target.name === 'undo' ?\n      setCount(count + 1) : setCount(count - 1);\n  }\n\n  //подстановка сохранённых значений при нажатии кнопок отменить/повторить\n  useEffect(() => {\n    if (!savedState.length) return;\n    setSelectedBooleans(savedState[savedState.length - count - 1].booleans);\n    setSelectedNumbers(savedState[savedState.length - count - 1].numbers);\n    setSelectedStrings(savedState[savedState.length - count - 1].strings);\n    setSelectedObjects(savedState[savedState.length - count - 1].objects);\n  }, [count]);\n\n  //кнопка сброс\n  const resetFilters = (e) => {\n    e.preventDefault();\n    setSelectedStrings([]);\n    setSelectedNumbers([]);\n    setSelectedBooleans([]);\n    setSelectedObjects([]);\n    setSavedState([]);\n    setCount(0);\n  }\n\n  //выбор данных в селектах\n  const setFilter = (target, name) => {\n    setReseted(false);\n    setCount(0);\n    switch (name) {\n      case 'numbers':\n        target ? setSelectedNumbers(target) : setSelectedNumbers([])\n        break;\n      case 'strings':\n        target ? setSelectedStrings(target) : setSelectedStrings([])\n        break;\n      case 'objects':\n        target ? setSelectedObjects(target) : setSelectedObjects([])\n        break;\n      case 'booleans':\n        target ? setSelectedBooleans(target) : setSelectedBooleans([])\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <div className='App-container'>\n      {modalErr ?\n        <Modal\n          isOpen={modalErr}\n          onRequestClose={setModalErr}\n          parentSelector={() => document.querySelector('#root')}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <p>Произошла ошибка.</p>\n          <button onClick={setModalErr} className=\"reset\">Закрыть</button>\n        </Modal>\n        :\n        <div className=\"App\">\n          <div className='selectors'>\n            <MultiSelect\n              options={numbers}\n              value={selectedNumbers}\n              hasSelectAll={false}\n              disableSearch={true}\n              onChange={(array) => { setFilter(array, 'numbers') }}\n              labelledBy=\"Select\"\n            />\n            <MultiSelect\n              options={strings}\n              value={selectedStrings}\n              hasSelectAll={false}\n              disableSearch={true}\n              onChange={(array) => { setFilter(array, 'strings') }}\n              labelledBy=\"Select\"\n            />\n            <MultiSelect\n              options={objects}\n              value={selectedObjects}\n              hasSelectAll={false}\n              disableSearch={true}\n              onChange={(array) => { setFilter(array, 'objects') }}\n              labelledBy=\"Select\"\n            />\n            <MultiSelect\n              options={booleans}\n              value={selectedBooleans}\n              hasSelectAll={false}\n              disableSearch={true}\n              onChange={(array) => { setFilter(array, 'booleans') }}\n              labelledBy=\"Select\"\n            />\n          </div>\n          <div className=\"section-result\">\n            <SelectorsList\n              strings={selectedStrings}\n              numbers={selectedNumbers}\n              booleans={selectedBooleans}\n              objects={selectedObjects}\n            />\n            <div className='results'>\n              <CountedHashStrings selectedStrings={selectedStrings} />\n              <CountedNumbersResult selectedNumbers={selectedNumbers} />\n              <button\n                disabled={(savedState.length > +1\n                  && (savedState.length - count - +1) >= +1) ?\n                  false : true}\n                className='undo'\n                name=\"undo\"\n                onClick={(e) => { undoRedo(e) }}\n              >\n                Отменить\n              </button>\n              <button\n                disabled={(count && savedState.length > +1) ? false : true}\n                className='redo'\n                name=\"redo\"\n                onClick={(e) => { undoRedo(e) }}\n              >\n                Повторить\n              </button>\n              <button\n                className='reset'\n                onClick={(e) => { resetFilters(e) }}\n              >\n                Сбросить\n              </button>\n            </div>\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}